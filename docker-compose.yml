version: "3.8"

networks:
  backend:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    restart: unless-stopped
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    restart: unless-stopped
    networks:
      - backend

  bleam:
    build:
      context: ./Bleam
      dockerfile: Dockerfile
    image: bleam:latest   # üëà —Ñ–∏–∫—Å
    container_name: bleam
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
      - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS:-"-Xms512m -Xmx1g"}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - JWT_SECRET_USER=${JWT_SECRET_USER}
      - JWT_SECRET_SERVICE=${JWT_SECRET_SERVICE}
      - JWT_EXPIRATION_SERVICE=${JWT_EXPIRATION_SERVICE}
      - JWT_EXPIRATION_USER=${JWT_EXPIRATION_USER}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - TELEGRAM_URL=${TELEGRAM_URL}
      - WHATSAPP_URL=${WHATSAPP_URL}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - SUCCESS_URL=${SUCCESS_URL}
      - ERROR_URL=${ERROR_URL}
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - backend

  whatsapp-bridge:
    build:
      context: ./whatsapp-bridge
      dockerfile: Dockerfile
    image: whatsapp-bridge:latest   # üëà —Ñ–∏–∫—Å
    container_name: whatsapp-bridge
    environment:
      - KAFKA_BROKERS=${KAFKA_BROKERS:-kafka:9092}
      - KAFKA_CLIENT_ID=${KAFKA_CLIENT_ID_WHATSAPP:-whatsapp-bridge}
      - KAFKA_CONSUMER_GROUP=${KAFKA_CONSUMER_GROUP_WHATSAPP:-whatsapp-consumer}
      - PORT=${WHATSAPP_PORT:-3000}
      - SERVICE_NAME=${SERVICE_NAME_WHATSAPP:-whatsapp-service}
      - JWT_SERVICE_SECRET=${JWT_SECRET_SERVICE:-MyAnotherSuperSecretKeyForServices12345}
      - PLATFORM_SERVICE_URL=${PLATFORM_SERVICE_URL_WHATSAPP:-http://localhost:8080/api/platforms/whatsapp-ids}
    ports:
      - "${WHATSAPP_PORT:-3000}:3000"
    volumes:
      - whatsapp_sessions:/usr/src/app/sessions
    depends_on:
      - kafka
      - bleam
    restart: unless-stopped
    networks:
      - backend

  telegram-bridge:
    build:
      context: ./telegram-bridge
      dockerfile: Dockerfile
    image: telegram-bridge:latest   # üëà —Ñ–∏–∫—Å
    container_name: telegram-bridge
    environment:
      - KAFKA_BROKERS=${KAFKA_BROKERS:-kafka:9092}
      - KAFKA_CLIENT_ID=${KAFKA_CLIENT_ID_TELEGRAM:-telegram-bridge}
      - KAFKA_CONSUMER_GROUP=${KAFKA_CONSUMER_GROUP_TELEGRAM:-telegram-consumer}
      - PORT=${TELEGRAM_PORT:-3001}
      - SERVICE_NAME=${SERVICE_NAME_TELEGRAM:-telegram-service}
      - JWT_SERVICE_SECRET=${JWT_SECRET_SERVICE:-MyAnotherSuperSecretKeyForServices12345}
      - PLATFORM_SERVICE_URL=${PLATFORM_SERVICE_URL_TELEGRAM:-http://localhost:8080/api/platforms/telegram-ids}
      - TG_WEBHOOK_SECRET_SALT=${TG_WEBHOOK_SECRET_SALT:-ec7f3b9f4aa94c9285d473df82b49c9e6b5f5f6c1a99eac0e7c4d2f913c88b7f}
    ports:
      - "${TELEGRAM_PORT:-3001}:3000"
    depends_on:
      - kafka
      - bleam
    restart: unless-stopped
    networks:
      - backend

volumes:
  whatsapp_sessions:
  kafka_data:
  zookeeper_data:
